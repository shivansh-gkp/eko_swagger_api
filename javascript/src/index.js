/**
 * transfer_money
 * An API depicting the working of EKO platform
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 1.0.15
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse20010', 'model/InlineResponse20010Data', 'model/InlineResponse20011', 'model/InlineResponse20011Data', 'model/InlineResponse20012', 'model/InlineResponse20012Data', 'model/InlineResponse20013', 'model/InlineResponse20013Data', 'model/InlineResponse2001Parameters', 'model/InlineResponse2002', 'model/InlineResponse2002Data', 'model/InlineResponse2003', 'model/InlineResponse2003Data', 'model/InlineResponse2004', 'model/InlineResponse2004Data', 'model/InlineResponse2005', 'model/InlineResponse2005Data', 'model/InlineResponse2006', 'model/InlineResponse2006Data', 'model/InlineResponse2007', 'model/InlineResponse2007Data', 'model/InlineResponse2008', 'model/InlineResponse2008Data', 'model/InlineResponse2009', 'model/InlineResponse2009Data', 'model/InlineResponse200Data', 'api/BanksApi', 'api/CustomersApi', 'api/RecipientsApi', 'api/TransactionsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/InlineResponse200'), require('./model/InlineResponse2001'), require('./model/InlineResponse20010'), require('./model/InlineResponse20010Data'), require('./model/InlineResponse20011'), require('./model/InlineResponse20011Data'), require('./model/InlineResponse20012'), require('./model/InlineResponse20012Data'), require('./model/InlineResponse20013'), require('./model/InlineResponse20013Data'), require('./model/InlineResponse2001Parameters'), require('./model/InlineResponse2002'), require('./model/InlineResponse2002Data'), require('./model/InlineResponse2003'), require('./model/InlineResponse2003Data'), require('./model/InlineResponse2004'), require('./model/InlineResponse2004Data'), require('./model/InlineResponse2005'), require('./model/InlineResponse2005Data'), require('./model/InlineResponse2006'), require('./model/InlineResponse2006Data'), require('./model/InlineResponse2007'), require('./model/InlineResponse2007Data'), require('./model/InlineResponse2008'), require('./model/InlineResponse2008Data'), require('./model/InlineResponse2009'), require('./model/InlineResponse2009Data'), require('./model/InlineResponse200Data'), require('./api/BanksApi'), require('./api/CustomersApi'), require('./api/RecipientsApi'), require('./api/TransactionsApi'));
  }
}(function(ApiClient, InlineResponse200, InlineResponse2001, InlineResponse20010, InlineResponse20010Data, InlineResponse20011, InlineResponse20011Data, InlineResponse20012, InlineResponse20012Data, InlineResponse20013, InlineResponse20013Data, InlineResponse2001Parameters, InlineResponse2002, InlineResponse2002Data, InlineResponse2003, InlineResponse2003Data, InlineResponse2004, InlineResponse2004Data, InlineResponse2005, InlineResponse2005Data, InlineResponse2006, InlineResponse2006Data, InlineResponse2007, InlineResponse2007Data, InlineResponse2008, InlineResponse2008Data, InlineResponse2009, InlineResponse2009Data, InlineResponse200Data, BanksApi, CustomersApi, RecipientsApi, TransactionsApi) {
  'use strict';

  /**
   * An_API_depicting_the_working_of_EKO_platform.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var TransferMoney = require('index'); // See note below*.
   * var xxxSvc = new TransferMoney.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new TransferMoney.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new TransferMoney.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new TransferMoney.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse20010 model constructor.
     * @property {module:model/InlineResponse20010}
     */
    InlineResponse20010: InlineResponse20010,
    /**
     * The InlineResponse20010Data model constructor.
     * @property {module:model/InlineResponse20010Data}
     */
    InlineResponse20010Data: InlineResponse20010Data,
    /**
     * The InlineResponse20011 model constructor.
     * @property {module:model/InlineResponse20011}
     */
    InlineResponse20011: InlineResponse20011,
    /**
     * The InlineResponse20011Data model constructor.
     * @property {module:model/InlineResponse20011Data}
     */
    InlineResponse20011Data: InlineResponse20011Data,
    /**
     * The InlineResponse20012 model constructor.
     * @property {module:model/InlineResponse20012}
     */
    InlineResponse20012: InlineResponse20012,
    /**
     * The InlineResponse20012Data model constructor.
     * @property {module:model/InlineResponse20012Data}
     */
    InlineResponse20012Data: InlineResponse20012Data,
    /**
     * The InlineResponse20013 model constructor.
     * @property {module:model/InlineResponse20013}
     */
    InlineResponse20013: InlineResponse20013,
    /**
     * The InlineResponse20013Data model constructor.
     * @property {module:model/InlineResponse20013Data}
     */
    InlineResponse20013Data: InlineResponse20013Data,
    /**
     * The InlineResponse2001Parameters model constructor.
     * @property {module:model/InlineResponse2001Parameters}
     */
    InlineResponse2001Parameters: InlineResponse2001Parameters,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The InlineResponse2002Data model constructor.
     * @property {module:model/InlineResponse2002Data}
     */
    InlineResponse2002Data: InlineResponse2002Data,
    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003: InlineResponse2003,
    /**
     * The InlineResponse2003Data model constructor.
     * @property {module:model/InlineResponse2003Data}
     */
    InlineResponse2003Data: InlineResponse2003Data,
    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004: InlineResponse2004,
    /**
     * The InlineResponse2004Data model constructor.
     * @property {module:model/InlineResponse2004Data}
     */
    InlineResponse2004Data: InlineResponse2004Data,
    /**
     * The InlineResponse2005 model constructor.
     * @property {module:model/InlineResponse2005}
     */
    InlineResponse2005: InlineResponse2005,
    /**
     * The InlineResponse2005Data model constructor.
     * @property {module:model/InlineResponse2005Data}
     */
    InlineResponse2005Data: InlineResponse2005Data,
    /**
     * The InlineResponse2006 model constructor.
     * @property {module:model/InlineResponse2006}
     */
    InlineResponse2006: InlineResponse2006,
    /**
     * The InlineResponse2006Data model constructor.
     * @property {module:model/InlineResponse2006Data}
     */
    InlineResponse2006Data: InlineResponse2006Data,
    /**
     * The InlineResponse2007 model constructor.
     * @property {module:model/InlineResponse2007}
     */
    InlineResponse2007: InlineResponse2007,
    /**
     * The InlineResponse2007Data model constructor.
     * @property {module:model/InlineResponse2007Data}
     */
    InlineResponse2007Data: InlineResponse2007Data,
    /**
     * The InlineResponse2008 model constructor.
     * @property {module:model/InlineResponse2008}
     */
    InlineResponse2008: InlineResponse2008,
    /**
     * The InlineResponse2008Data model constructor.
     * @property {module:model/InlineResponse2008Data}
     */
    InlineResponse2008Data: InlineResponse2008Data,
    /**
     * The InlineResponse2009 model constructor.
     * @property {module:model/InlineResponse2009}
     */
    InlineResponse2009: InlineResponse2009,
    /**
     * The InlineResponse2009Data model constructor.
     * @property {module:model/InlineResponse2009Data}
     */
    InlineResponse2009Data: InlineResponse2009Data,
    /**
     * The InlineResponse200Data model constructor.
     * @property {module:model/InlineResponse200Data}
     */
    InlineResponse200Data: InlineResponse200Data,
    /**
     * The BanksApi service constructor.
     * @property {module:api/BanksApi}
     */
    BanksApi: BanksApi,
    /**
     * The CustomersApi service constructor.
     * @property {module:api/CustomersApi}
     */
    CustomersApi: CustomersApi,
    /**
     * The RecipientsApi service constructor.
     * @property {module:api/RecipientsApi}
     */
    RecipientsApi: RecipientsApi,
    /**
     * The TransactionsApi service constructor.
     * @property {module:api/TransactionsApi}
     */
    TransactionsApi: TransactionsApi
  };

  return exports;
}));
